@using Shopily.Domain.ViewModel.Products
@model IndexVM

<main>
    <div class="bg-light py-3">
        <div class="container">
            <div class="row">
                <div class="col-md-12 mb-0">
                    <a href="/">@Shopily.Resources.Resource.Home</a>
                    <span class="mx-2 mb-0">/</span>
                    <strong class="text-black">@Shopily.Resources.Resource.Shop</strong>
                </div>
            </div>
        </div>
    </div>

    <div class="site-section">
        <div class="container">
            <div class="row mb-5">
                <div class="col-md-9 order-2">
                    <div class="row">
                        <div class="col-md-12 mb-5">
                            <div class="float-md-left mb-4">
                                <h2 class="text-black h5">@Shopily.Resources.Resource.ShopAll</h2>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-5">
                        @if (Model.Items != null && Model.Items.Any())
                        {
                            @foreach (var product in Model.Items)
                            {
                                <div class="col-sm-6 col-lg-4 mb-4" data-aos="fade-up">
                                    <div class="block-4 text-center border">
                                        <figure class="block-4-image">
                                            <a href="/Shop/Shopsingle?ProductId=@product.Id">
                                                <img src="images/@product.ImagePath" alt="@product.ProductName" class="img-fluid" />
                                            </a>
                                        </figure>
                                        <div class="block-4-text p-4">
                                            <h3><a href="/Shop/Shopsingle?ProductId=@product.Id">@product.ProductName</a></h3>
                                            <p class="text-primary font-weight-bold">$@product.Price</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p>@Shopily.Resources.Resource.NoProducts</p>
                        }
                    </div>

                    <div class="row" data-aos="fade-up">
                        <div class="col-md-12 text-center">
                            <div class="site-block-27">
                                <ul>
                                    @if (Model.Pager != null && Model.Pager.CurrentPage > 1)
                                    {
                                        <li><a href="@Url.Action("Shop", new { page = Model.Pager.CurrentPage - 1, productName = Model.ProductName, category = Model.Category, productTypes = Model.ProductType })">&lt;</a></li>
                                    }

                                    @if (Model.Pager != null)
                                    {
                                        @for (int i = 1; i <= Model.Pager.PagesCount; i++)
                                        {
                                            <li class="@(i == Model.Pager.CurrentPage ? "active" : "")">
                                                <a href="@Url.Action("Shop", new { page = i, productName = Model.ProductName, category = Model.Category, productTypes = Model.ProductType })">@i</a>
                                            </li>
                                        }
                                    }

                                    @if (Model.Pager != null && Model.Pager.CurrentPage < Model.Pager.PagesCount)
                                    {
                                        <li><a href="@Url.Action("Shop", new { page = Model.Pager.CurrentPage + 1, productName = Model.ProductName, category = Model.Category, productTypes = Model.ProductType })">&gt;</a></li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="col-md-3 order-1 mb-5 mb-md-0">
                    <div class="card border-0 shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title text-uppercase font-weight-bold text-center">Categories</h5>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <a href="@Url.Action("Shop", new { category = "Male", productTypes = Model.ProductType, productName = Model.ProductName })" class="text-decoration-none text-dark">
                                        @Shopily.Resources.Resource.Men
                                    </a>
                                    <span class="badge badge-primary badge-pill">@Model.MaleCount</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <a href="@Url.Action("Shop", new { category = "Female", productTypes = Model.ProductType, productName = Model.ProductName })" class="text-decoration-none text-dark">
                                        @Shopily.Resources.Resource.Women
                                    </a>
                                    <span class="badge badge-primary badge-pill">@Model.FemaleCount</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <a href="@Url.Action("Shop", new { category = "Kids", productTypes = Model.ProductType, productName = Model.ProductName })" class="text-decoration-none text-dark">
                                        @Shopily.Resources.Resource.Kids
                                    </a>
                                    <span class="badge badge-primary badge-pill">@Model.KidsCount</span>
                                </li>
                            </ul>
                        </div>
                    </div>

                    <div class="card border-0 shadow-sm mt-4">
                        <div class="card-body">
                            <h5 class="card-title text-uppercase font-weight-bold text-center">@Shopily.Resources.Resource.ProductType</h5>
                            <form id="filterForm" method="get" action="/Shop">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input productTypeFilter" name="productTypes" value="Boots"
                                    @(Model.ProductType != null && Model.ProductType.Contains("Boots") ? "checked" : "")>
                                    <label class="form-check-label">@Shopily.Resources.Resource.Boots</label>
                                </div>
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input productTypeFilter" name="productTypes" value="Sweater"
                                    @(Model.ProductType != null && Model.ProductType.Contains("Sweater") ? "checked" : "")>
                                    <label class="form-check-label">@Shopily.Resources.Resource.Sweater</label>
                                </div>
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input productTypeFilter" name="productTypes" value="Jacket"
                                    @(Model.ProductType != null && Model.ProductType.Contains("Jacket") ? "checked" : "")>
                                    <label class="form-check-label">@Shopily.Resources.Resource.Jacket</label>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
<!-- i tva tuka  -->
<script>
 
    document.querySelectorAll('.productTypeFilter').forEach(function (checkbox) {
        checkbox.addEventListener('change', function () {
            const urlParams = new URLSearchParams(window.location.search);
            const category = urlParams.get('category') || ''; 

            const selectedProductTypes = [];
            document.querySelectorAll('.productTypeFilter:checked').forEach(function (checkbox) {
                selectedProductTypes.push(checkbox.value);
            });

        
            let url = '/Shop?';
            if (category) url += 'category=' + category + '&'; 
            if (selectedProductTypes.length > 0) {
                url += 'productTypes=' + selectedProductTypes.join(',');
            }

 
            window.location.href = url; 
        });
    });

 
    document.querySelectorAll('.list-unstyled a').forEach(function (link) {
        link.addEventListener('click', function (event) {
            event.preventDefault();

            const category = this.getAttribute('href').split('category=')[1];

            const selectedProductTypes = [];
            document.querySelectorAll('.productTypeFilter:checked').forEach(function (checkbox) {
                selectedProductTypes.push(checkbox.value);
            });

            let url = '/Shop?category=' + category;
            if (selectedProductTypes.length > 0) {
                url += '&productTypes=' + selectedProductTypes.join(',');
            }

            window.location.href = url;
        });
    });

    window.addEventListener('DOMContentLoaded', function () {
        const urlParams = new URLSearchParams(window.location.search);
        const productTypes = urlParams.get('productTypes') ? urlParams.get('productTypes').split(',') : [];
        document.querySelectorAll('.productTypeFilter').forEach(function (checkbox) {
            if (productTypes.includes(checkbox.value)) {
                checkbox.checked = true;
            }
        });

        const category = urlParams.get('category');
        if (category) {
            document.querySelectorAll('.list-unstyled a').forEach(function (link) {
                if (link.getAttribute('href').includes('category=' + category)) {
                    link.classList.add('active');
                } else {
                    link.classList.remove('active');
                }
            });
        }
    });


</script>